{"version":3,"sources":["components/contactslist/ContactsList.js","components/ContactsListItem/ContactsListItem.js","components/Form/Form.js","components/App.js","index.js"],"names":["ContactsList","children","ContactsListItem","filteredContacts","removePhone","map","contact","key","id","name","number","type","onClick","Form","handleSubmit","addContact","filter","chengeFilter","onSubmit","value","onChange","App","state","contacts","setState","findContacts","toLowerCase","includes","e","preventDefault","find","addedName","alert","prevState","uuidv4","target","phoneId","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.693d0c51.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\n\n\nconst ContactsList = ({children}) => {\n    return (\n      <>\n      <ul>\n    {children}\n        </ul>\n      </>\n    );\n  };\n  \n  export default ContactsList;\n\n\n\n  ContactsList.propTypes = {\n    filteredContacts: PropTypes.node,\n\n  };","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactsListItem = ({filteredContacts, removePhone }) => {\n  return (\n    <>\n      {filteredContacts.map(contact => (\n        <li key={contact.id} name=\"name\">\n          {contact.name}: {contact.number}\n          <button type=\"button\" onClick={() => removePhone(contact.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default ContactsListItem;\n\nContactsListItem.propTypes = {\n    filteredContacts: PropTypes.func,\n    removePhone: PropTypes.func,\n\n  };\n","import React from 'react'\nimport PropTypes from 'prop-types'; \n\n\nconst Form = ({handleSubmit, name, addContact, filter, chengeFilter, number}) => {\n    return (\n      <>\n   <h2>Phonebook</h2>\n        <form onSubmit={handleSubmit}>\n          <label>\n            Name: <input type=\"text\" value={name} name=\"name\" onChange={addContact} />\n          </label>\n\n          <label>\n            Number: <input type=\"tel\" value={number} name=\"number\" onChange={addContact} />\n          </label>\n\n          <button type=\"submit\">Add contacts</button>\n        </form>\n\n        <h2>Contacts</h2>\n        <p>Find contacts by name</p>\n        <label>\n          Filter: <input type=\"text\" value={filter} name=\"filter\" onChange={chengeFilter} />\n        </label>\n      </>\n    );\n  };\n  \n  export default Form;\n\n\n  Form.propTypes = {\n    handleSubmit: PropTypes.func,\n    name: PropTypes.string,\n    addContact: PropTypes.func,\n    filter: PropTypes.string,\n    chengeFilter: PropTypes.func,\n    number: PropTypes.string,\n\n  };","import React, { Component } from \"react\";\nimport \"./App.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactsList from \"./contactslist/ContactsList\";\nimport ContactsListItem from './ContactsListItem/ContactsListItem';\nimport Form from \"./Form/Form\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" }\n    ],\n    filter: \"\",\n    name: \"\",\n    number: \"\"\n  };\n\n  chengeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  findContacts = () => {\n    // return this.state.filter\n    //   ? this.state.contacts.filter((contact) =>\n    //       contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    //     )\n    //   : this.state.contacts;\n    const { filter, contacts } = this.state;\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number, contacts } = this.state;\n    const sameContact = contacts.map(contact => contact.name);\n    if (sameContact.find(addedName => addedName === name)) {\n      alert(`${name} is already in your contacts`);\n    } else {\n      this.setState(prevState => ({ contacts: [...prevState.contacts, { id: uuidv4(), name, number }] }));\n    }\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  addContact = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  removePhone = phoneId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== phoneId)\n      };\n    });\n  };\n\n  render() {\n    const { filter, name, number, contacts } = this.state;\n    const filteredContacts = this.findContacts();\n    return (\n\n      <>\n        <Form\n        handleSubmit={this.handleSubmit}\n        name={name}\n        number={number}\n        addContact={this.addContact}\n        filter={filter}\n        chengeFilter={e => this.chengeFilter(e.target.value)}\n        />\n        <ContactsList>\n        <ContactsListItem\n        filteredContacts={filteredContacts}\n        contacts={contacts}\n        removePhone={this.removePhone}\n        />\n        </ContactsList>\n    </>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}